C51 COMPILER V9.60.7.0   DS1302                                                            09/08/2025 08:51:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ds1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ds
                    -1302.lst) TABS(2) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "smg.h"
   3          
   4          #define DS1302_WP_WADDR     0x8E
   5          #define DS1302_SEC_RADDR    0x81
   6          #define DS1302_SEC_WADDR    0x80
   7          #define DS1302_MIN_RADDR    0x83
   8          #define DS1302_MIN_WADDR    0x82
   9          #define DS1302_HOUR_RADDR   0x85
  10          #define DS1302_HOUR_WADDR   0x84
  11          
  12          sbit DS1302_CE = P3^5;
  13          sbit DS1302_IO = P3^4;
  14          sbit DS1302_SCLK = P3^6;
  15          
  16          
  17          void DS1302_Init()
  18          {
  19   1        DS1302_CE = 0;
  20   1        DS1302_SCLK = 0;
  21   1      }
  22          
  23          void DS1302_writebyte(unsigned char addr, dat)
  24          {
  25   1        unsigned char i;
  26   1        DS1302_CE = 1;
  27   1        //write addr
  28   1        for(i = 0;i < 8;i++)
  29   1        {
  30   2          DS1302_IO = addr & (0x01 << i);
  31   2          DS1302_SCLK = 1;
  32   2          DS1302_SCLK = 0;
  33   2        }
  34   1        //write data
  35   1        for(i = 0;i < 8;i++)
  36   1        {
  37   2          DS1302_IO = dat & (0x01 << i);
  38   2          DS1302_SCLK = 1;
  39   2          DS1302_SCLK = 0;
  40   2        }
  41   1        DS1302_CE = 0;
  42   1         
  43   1      }
  44          
  45          unsigned char DS1302_readbyte(unsigned char addr)
  46          {
  47   1        unsigned char i, dat = 0;
  48   1        DS1302_CE = 1;
  49   1        //write addr
  50   1        for(i = 0;i < 8;i++)
  51   1        {
  52   2          DS1302_IO = addr & (0x01 << i);
  53   2      //    DS1302_SCLK = 0;
  54   2          DS1302_SCLK = 1;
C51 COMPILER V9.60.7.0   DS1302                                                            09/08/2025 08:51:52 PAGE 2   

  55   2          if(7 != i)
  56   2          {
  57   3            DS1302_SCLK = 0;
  58   3          }
  59   2        }
  60   1        //read data
  61   1        for(i = 0;i < 8;i++)
  62   1        {
  63   2          dat >>= 1;
  64   2          DS1302_SCLK = 1;
  65   2          DS1302_SCLK = 0;
  66   2          if(DS1302_IO)
  67   2          {
  68   3            dat |= 0x80;
  69   3          }
  70   2          if(7 != i)
  71   2          {
  72   3            DS1302_SCLK = 1;
  73   3          } 
  74   2        }
  75   1        DS1302_CE = 0;
  76   1        DS1302_IO = 0; //write 0 or read data error!!!
  77   1        return dat;
  78   1      }
  79          
  80          // 0 enable write; 1 disable write
  81          void DS1302_WP_Enable(unsigned char enable)
  82          {
  83   1        DS1302_writebyte(DS1302_WP_WADDR, (enable << 7)& 0x80);
  84   1      }
  85          
  86          //0 24mod;1 12mod
  87          void DS1302_SET_TimeMod(unsigned char timemod)
  88          {
  89   1        DS1302_writebyte(DS1302_HOUR_WADDR, (timemod << 7)& 0x80);
  90   1      }
  91          
  92          //read realtime
  93          unsigned char* DS1302_Read_RealTime()
  94          {
  95   1        unsigned char RTime[8];
  96   1        unsigned char temp = 0;
  97   1        temp = DS1302_readbyte(DS1302_HOUR_RADDR);
  98   1        RTime[0] = temp / 16 ;
  99   1        RTime[1] = temp % 16;
 100   1        temp = DS1302_readbyte(DS1302_MIN_RADDR);
 101   1        RTime[3] = temp / 16 ;
 102   1        RTime[4] = temp % 16;
 103   1        temp = DS1302_readbyte(DS1302_SEC_RADDR);
 104   1        RTime[6] = temp / 16 ;
 105   1        RTime[7] = temp % 16;
 106   1        return RTime;
 107   1      }
 108          //set realtime
 109          void DS1302_Write_RealTime(unsigned char hours, mins, secs)
 110          {
 111   1        unsigned char temp;
 112   1        temp = hours /10 *16 + hours % 10;
 113   1        DS1302_writebyte(DS1302_HOUR_WADDR, temp);
 114   1        temp = mins /10 *16 + mins % 10;
 115   1        DS1302_writebyte(DS1302_MIN_WADDR, temp);
 116   1        temp = secs /10 *16 + secs % 10;
C51 COMPILER V9.60.7.0   DS1302                                                            09/08/2025 08:51:52 PAGE 3   

 117   1        DS1302_writebyte(DS1302_SEC_WADDR, temp);
 118   1      }
 119          
 120          
 121          void Timer2Init(void)   //10ms@11.0592MHz
 122          {
 123   1        T2MOD = 0;    
 124   1        T2CON = 0;    
 125   1        TL2 = 0x00;   
 126   1        TH2 = 0xDC;   
 127   1        RCAP2L = 0x00;    
 128   1        RCAP2H = 0xDC;  
 129   1        TR2 = 1;
 130   1        ET2 = 1;
 131   1        EA = 1;
 132   1      }
 133          
 134          void Timer2_Routine() interrupt 5
 135          {
 136   1        unsigned char i;
 137   1        unsigned char *RTBuffer, smgbuffer[8];
 138   1      
 139   1          RTBuffer = DS1302_Read_RealTime();
 140   1          for(i = 0;i < 8;i++)
 141   1            {
 142   2              if(2 == i || 5 == i)
 143   2              {
 144   3                smgbuffer[i] = 0x40;
 145   3              }
 146   2              else
 147   2              {
 148   3                smgbuffer[i] = get_smg_code(RTBuffer[i]);
 149   3              }
 150   2            }
 151   1          smg_display(smgbuffer, 1);
 152   1      
 153   1        TF2 = 0;
 154   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    521    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
